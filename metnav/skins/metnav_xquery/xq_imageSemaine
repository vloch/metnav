xquery version "1.0";
declare namespace db="http://docbook.org/ns/docbook";
declare namespace ld="http://namespaces.ens-lyon.fr/livredoc/";
declare namespace lom="http://ltsc.ieee.org/xsd/LOM";
declare namespace lomfrens="http://pratic.ens-lyon.fr/xsd/LOMFRENS";
declare namespace transform="http://exist-db.org/xquery/transform";
declare namespace xsl="http://www.w3.org/1999/XSL/Transform";
declare namespace util="http://exist-db.org/xquery/util";
declare namespace exist="http://exist.sourceforge.net/NS/exist";
declare namespace vdex="http://www.imsglobal.org/xsd/imsvdex_v1p0";
declare option exist:serialize "method=xhtml";

for $res in collection('%(meta_url)s')/lom:lom[lom:lifeCycle/lom:contribute[lom:role/lom:value='publisher']/lom:date/lom:dateTime/text() > '%(date_max)s'][lom:lifeCycle/lom:contribute[lom:role/lom:value='publisher']/lom:date/lom:dateTime/text() <= adjust-date-to-timezone(current-date(),())]%(OBJECT_TYPE)s%(ANNEE)s
let $date_aff:= $res/lom:lifeCycle/lom:contribute[lom:role/lom:value='publisher']/lom:date/lom:dateTime/text(),
    $titre := $res/lom:general/lom:title/lom:string/text(),
    $location    := $res/lom:technical/lom:location[1]/text(),
    $description := $res/lom:general/lom:description/lom:string/text(),
    $url_imgs := document($res/lom:technical/lom:location[1])/db:article//db:imageobject,
    $url_img := distinct-values($url_imgs[1]/db:imagedata/@fileref)

order by $date_aff descending empty least
return
  <res>
  <id>{document-uri(root($res))}</id>
  <title>{$titre}</title>
  <url>{if(starts-with($location, 'xmldb:exist://'))
    then
      concat('%(site_url)s/XML', document-uri(root($res)))
    else
      $location
    }</url>
  <description>{$description}</description>
  <date>{$date_aff}</date>
  <urlImg>{$url_img}</urlImg>
</res>
